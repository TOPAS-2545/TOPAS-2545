/*
 * Generated by asn1c-0.9.28 (http://lionet.info/asn1c)
 * From ASN.1 module "IPMTSCD"
 * 	found in "../Annex_A_10711_v2.0.asn"
 * 	`asn1c -fcompound-names`
 */

#ifndef	_IpmstscdIDTypeDetectorInformation_H_
#define	_IpmstscdIDTypeDetectorInformation_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <NativeEnumerated.h>
#include <OCTET_STRING.h>
#include <NativeReal.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum IpmstscdIDTypeDetectorInformation__idDeviceType {
	IpmstscdIDTypeDetectorInformation__idDeviceType_infra_Red	= 0,
	IpmstscdIDTypeDetectorInformation__idDeviceType_radio_Frequency	= 1,
	IpmstscdIDTypeDetectorInformation__idDeviceType_vDSs	= 2,
	IpmstscdIDTypeDetectorInformation__idDeviceType_magnetics	= 3,
	IpmstscdIDTypeDetectorInformation__idDeviceType_barCodeScanner	= 4,
	IpmstscdIDTypeDetectorInformation__idDeviceType_tagScanner	= 5,
	IpmstscdIDTypeDetectorInformation__idDeviceType_other	= 6
	/*
	 * Enumeration is extensible
	 */
} e_IpmstscdIDTypeDetectorInformation__idDeviceType;
typedef enum IpmstscdIDTypeDetectorInformation__idErrorState {
	IpmstscdIDTypeDetectorInformation__idErrorState_rSEFail	= 1,
	IpmstscdIDTypeDetectorInformation__idErrorState_rSE_ConnectionFail	= 2,
	IpmstscdIDTypeDetectorInformation__idErrorState_wirelessFail	= 3,
	IpmstscdIDTypeDetectorInformation__idErrorState_unstableUtility	= 4,
	IpmstscdIDTypeDetectorInformation__idErrorState_managementNeeded	= 5
} e_IpmstscdIDTypeDetectorInformation__idErrorState;

/* IpmstscdIDTypeDetectorInformation */
typedef struct IpmstscdIDTypeDetectorInformation {
	long	 idSequenceNumber;
	long	*idDeviceType	/* OPTIONAL */;
	OCTET_STRING_t	 idVehicleIdentity;
	long	*idVehicleType	/* OPTIONAL */;
	long	*idVehicleUse	/* OPTIONAL */;
	long	*idDetectionLane	/* OPTIONAL */;
	long	*idDetectionLaneMedian	/* OPTIONAL */;
	double	*idDetectionSpeed	/* OPTIONAL */;
	long	*idOccupancy	/* OPTIONAL */;
	long	*idErrorState	/* OPTIONAL */;
	OCTET_STRING_t	*idTagInfo	/* OPTIONAL */;
	OCTET_STRING_t	*idUserData	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} IpmstscdIDTypeDetectorInformation_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_idDeviceType_3;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_idErrorState_19;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_IpmstscdIDTypeDetectorInformation;

#ifdef __cplusplus
}
#endif

#endif	/* _IpmstscdIDTypeDetectorInformation_H_ */
#include <asn_internal.h>
